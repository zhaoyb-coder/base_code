<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
		>
  	<!-- 对所有类进行扫描，以完成Bean创建和自动依赖注入的功能(Controller除外) -->
	<context:component-scan base-package="com.gz">
     	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
  	</context:component-scan>
	
	<!-- 数据库获取数据配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--dataSource属性指定要用到的连接池-->
		<property name="dataSource" ref="dataSource" />
		<!--configLocation属性指定mybatis的核心配置文件-->
		<property name="configLocation" value="WEB-INF/config/mybatis/mybatis.xml" />
		<!-- mapperLocations属性指定所有配置的mapper文件 -->
		<property name="mapperLocations" value="WEB-INF/config/mybatis/**/mybatis-*.xml" />
	</bean>

	<!-- 批处理的sqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
<!--		<constructor-arg index="1" value="BATCH" />-->
	</bean>

	<!-- jdbcTemplate -->
	<bean id="jdbcTemplateHelper" class="com.gz.helper.JdbcTemplateHelper">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<!-- 基于数据源的数据管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<tx:advice id="txtAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 对query/find开头的方法要求只读事务 -->
			<tx:method name="save*" propagation="REQUIRED" read-only="false" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" />
			<tx:method name="modify*" propagation="REQUIRED" read-only="false" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<!-- 对其它方法要求事务 -->
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
 		<aop:pointcut id="serviceMethods" expression="execution(* com.gz.service..*.*(..))" />
		<aop:advisor advice-ref="txtAdvice" pointcut-ref="serviceMethods" />
	</aop:config>
	<!-- 代理类 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	
	<!-- 导入activiti配置 -->
	<import resource="spring-activiti.xml"/>
</beans>
